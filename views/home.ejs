<%- include('partials/header.ejs') %>

<div class="p-4 text-[#455780] font-bold bg-gradient-to-b from-[#D1D9E9] to-[#FCFEFE]">
  

  <h1 class="text-center pb-4 pt-3 text-4xl font-extrabold text-[#354666]">Hello <span class="capitalize"><%= user.name %></span></h1>

  <!-- Overview/Vitals card -->
  <h2 class="mx-6 text-lg font-bold text-[#4f6495]">Overview</h2>
  <a href="/home/vitals">
    <div class="border-2 rounded-3xl drop-shadow-lg p-2 mx-1 mb-4 mt-1 bg-[#FCFEFE] hover:shadow-lg hover:border-none hover:drop-shadow-none hover:mt-2">
      <!-- Top (overview) section -->
      <div class="flex flex-row justify-around py-1 pb-3">
        <!-- Person figure -->
        <span class="material-symbols-outlined w-1/2 text-9xl text-center">
          accessibility_new
        </span>
  
        <!-- Stats status -->
        <div class="w-1/2 flex flex-col justify-around">
          <!-- Vitals status -->
          <div class="w-1/3 flex flex-row">
            <span class="material-symbols-outlined text-4xl pr-1 text-[<%= user.vitalsStatus.colour %>]">
              <%= user.vitalsStatus.icon %>
            </span>
            <p class="text-2xl">Vitals</p>
          </div>
  
          <!-- Blood status -->
          <div class="w-1/3 flex flex-row">
            <span class="material-symbols-outlined text-4xl pr-1 text-[<%= user.bloodStatus.colour %>]">
              <%= user.bloodStatus.icon %>
            </span>
            <p class="text-2xl">Blood</p>
          </div>
  
          <!-- Body status -->
          <div class="w-1/3 flex flex-row">
            <span class="material-symbols-outlined text-4xl pr-1 text-[<%= user.bodyStatus.colour %>]">
              <%= user.bodyStatus.icon %>
            </span>
            <p class="text-2xl">Body</p>
          </div>
        </div>
      </div>
  
      <!-- Bottom (vitals) section -->
      <div class="py-1">
        <!-- Pulse -->
        <div class="flex flex-row justify-center">
          <span class="material-symbols-outlined text-3xl pl-2 w-1/6 text-[#800000]">
            ecg_heart
          </span>
  
          <p class="text-2xl px-2 w-1/3 text-[#354666]"><%= user.bpm %><span class="text-sm text-[#455780]">BPM</span></p>
  
          <!-- pulse chart -->
          <div id="bpm-chart" class="mx-2">
            
          </div>
        </div>
  
        <!-- Body temperature -->
        <div class="py-1">
          <div class="flex flex-row justify-center">
            <span class="material-symbols-outlined text-3xl pl-2 w-1/6 text-[#800000]">
              device_thermostat
            </span>
  
            <p class="text-2xl px-2 w-1/3 text-[#354666]"><%= user.temp %><span class="text-[#455780]">°</span></p>
  
            <!-- temperature chart -->
            <div id="temp-chart" class="mx-2">
             
            </div>
          </div>
        </div>
  
        <!-- Respiratory rate -->
        <div class="py-1">
          <div class="flex flex-row justify-center">
            <span class="material-symbols-outlined text-3xl pl-2 w-1/6 text-[#800000]">
              pulmonology
            </span>
  
            <p class="text-2xl px-2 w-1/3 text-[#354666]"><%= user.rrp %><span class="text-sm text-[#455780]">RRP</span></p>
  
            <!-- breath chart -->
            <div id="breath-chart" class="mx-2">
              
            </div>
          </div>
        </div>
      </div>
    </div>
  </a>


  <!-- Body Composition card -->
  <h2 class="mx-6 pt-1 text-lg font-bold text-[#4f6495]">Body Composition</h2>
  <a href="home/bodycomposition">
    <div class="border-2 rounded-3xl drop-shadow-lg px-2 py-4 mx-1 mb-4 mt-1 bg-[#FCFEFE] hover:shadow-lg hover:border-none hover:drop-shadow-none hover:mt-2">
      <div class="flex flex-row">
        <!-- BMI -->
        <div class="w-1/3 text-center">
          <p class="text-2xl text-[#354666]"><%= user.bmi %></p>
          <p class="text-sm pt-2">BMI</p>
        </div>
  
        <!-- Body fat -->
        <div class="w-1/3 text-center">
          <p class="text-2xl text-[#354666]"><%= user.bf %><span class="text-sm text-[#455780]">%</span></p>
          <p class="text-sm pt-2">BF</p>
        </div>
  
        <!-- Weight -->
        <div class="w-1/3 text-center">
          <p class="text-2xl text-[#354666]"><%= user.weight %><span class="text-sm text-[#455780]">kg</span></p>
          <p class="text-sm pt-2">Weight</p>
        </div>
      </div>
    </div>
  </a>


  <!-- Blood card -->
  <h2 class="mx-6 pt-1 text-lg font-bold text-[#4f6495]">Blood Analysis</h2>
  <a href="home/bloodcomposition" class="mb-[70px] block">
    <div class="border-2 rounded-3xl drop-shadow-lg px-2 py-4 mx-1 mb-4 mt-1 bg-[#FCFEFE] hover:shadow-lg hover:border-none hover:drop-shadow-none hover:mt-2">
      <div class="flex flex-row">
        <!-- Body fat -->
        <div class="w-1/2 text-center">
          <p class="text-2xl text-[#354666]"><%= user.wbc %><span class="text-sm text-[#455780]">cells/μL</span></p>
          <p class="text-sm pt-2 text-[#455780]">WBC</p>
        </div>
  
        <!-- Weight -->
        <div class="w-1/2 text-center">
          <p class="text-2xl text-[#354666]"><%= user.rbc %><span class="text-sm">cells/μL</span></p>
          <p class="text-sm pt-2">RBC</p>
        </div>
      </div>
    </div>
  </a>

</div>

<script>
  // BPM and breath data to be dynamically changed
  let bpmChartData = [78, 60, 63, 57, 60, 78, 60, 63, 57, 60, 78, 60, 63, 57, 60, 78, 60, 63, 57, 60, 78, 60, 63, 57, 60];
  let breathChartData = [20, 20, 19, 15, 11, 10, 10, 11, 12, 15, 18, 19, 20, 20, 19, 15, 11, 10, 10, 11, 12, 15, 18, 19, 20, 20, 19, 15, 11, 10, 10, 11, 12, 15, 18, 19];

  // BPM chart
  let bpmOptions = {
    series: [{
      data: bpmChartData,
      color: "#1A56DB"
    }],
    chart: {
      type: 'line',
      width: "95%",
      height: 35,
      sparkline: {
        enabled: true
      }
    },
    tooltip: {
      fixed: {
        enabled: false
      },
      x: {
        show: false
      },
      y: {
        title: {
          formatter: function (seriesName) {
            return ''
          }
        }
      },
      marker: {
        show: false
      }
    }
  };

  // Temperature chart
  let tempOptions = {
    series: [{
      data: [36, 35, 35, 35, 36, 37, 38, 38, 38, 37, 36],
      color: "#1A56DB"
    }],
    chart: {
      type: 'line',
      width: "95%",
      height: 35,
      sparkline: {
        enabled: true
      }
    },
    tooltip: {
      fixed: {
        enabled: false
      },
      x: {
        show: false
      },
      y: {
        title: {
          formatter: function (seriesName) {
            return ''
          }
        }
      },
      marker: {
        show: false
      }
    }
  };

  // RRP chart
  let breathOptions = {
    series: [{
      data: breathChartData,
      color: "#1A56DB"
    }],
    chart: {
      type: 'line',
      width: "95%",
      height: 35,
      sparkline: {
        enabled: true
      }
    },
    tooltip: {
      fixed: {
        enabled: false
      },
      x: {
        show: false
      },
      y: {
        title: {
          formatter: function (seriesName) {
            return ''
          }
        }
      },
      marker: {
        show: false
      }
    }
  };

  // Create new Apex Chart for bpm, temp, and rrp 
  const bpmChart = new ApexCharts(document.getElementById("bpm-chart"), bpmOptions);
  const tempChart = new ApexCharts(document.getElementById("temp-chart"), tempOptions);
  const breathChart = new ApexCharts(document.getElementById("breath-chart"), breathOptions);

  // Render charts
  bpmChart.render();
  tempChart.render();
  breathChart.render();

  // Calculate the bpm and breath intervals to MS based on users data
  const bpmInterval = Math.floor((60000 / Number("<%= user.bpm %>")) * 4);
  const breathInterval = Math.floor((60000 / Number("<%= user.rrp %>")) * 2);

  // Shift the bpm graph based on the users BPM
  setInterval(() => {
    let shiftElement = bpmChartData.shift();
    bpmChartData.push(shiftElement);
    bpmChart.updateSeries([{ data: bpmChartData }])
  }, bpmInterval);

  // Shift the breath graph based on the users RRP
  setInterval(() => {
    for (let i = 0; i < 3; i++) {
      let shiftElement = breathChartData.shift();
      breathChartData.push(shiftElement);
    }
    breathChart.updateSeries([{ data: breathChartData }])
  }, breathInterval);
  
</script>

<%- include('partials/bottomNav.ejs') %>
