<%- include('partials/header.ejs') %>

  <div class="flex-grow flex justify-center items-center bg-white dark:bg-gray-900">
    <form
      class="max-w-sm mx-auto flex flex-col justify-center items-center rounded-xl shadow-xl bg-gray-100 dark:bg-gray-800 p-5"
      method="post" action="/signup">
      <div class="w-full mb-4 text-center">
        <h1 class="text-3xl font-bold text-gray-900 dark:text-white">Sign up</h1>
      </div>

      <div class="relative mb-4">
        <input id="name" name="name" type="text" id="floating_outlined"
          value="<%= formData && formData.name ? formData.name : '' %>"
          class="block px-2.5 pb-2.5 pt-4 w-full text-sm text-gray-900 bg-transparent rounded-lg border-1 border-gray-300 appearance-none dark:text-white dark:border-gray-600 dark:focus:border-blue-500 focus:outline-none focus:ring-0 focus:border-blue-600 peer"
          placeholder=" " />
        <label for="floating_outlined"
          class="absolute text-xs text-gray-500 dark:text-gray-400 duration-300 transform -translate-y-4 scale-75 top-2 z-10 origin-[0] bg-gray-100 dark:bg-gray-800 px-2 peer-focus:px-2 peer-focus:text-blue-600 peer-focus:dark:text-blue-500 peer-placeholder-shown:scale-100 peer-placeholder-shown:-translate-y-1/2 peer-placeholder-shown:top-1/2 peer-focus:top-2 peer-focus:scale-75 peer-focus:-translate-y-4 rtl:peer-focus:translate-x-1/4 rtl:peer-focus:left-auto start-1">Name*</label>
      </div>

      <div class="relative mb-1">
        <input id="email" name="email" type="text" id="floating_outlined"
          value="<%= formData && formData.email ? formData.email : '' %>"
          class="block px-2.5 pb-2.5 pt-4 w-full text-sm text-gray-900 bg-transparent rounded-lg border-1 border-gray-300 appearance-none dark:text-white dark:border-gray-600 dark:focus:border-blue-500 focus:outline-none focus:ring-0 focus:border-blue-600 peer"
          placeholder=" " />
        <label for="floating_outlined"
          class="absolute text-xs text-gray-500 dark:text-gray-400 duration-300 transform -translate-y-4 scale-75 top-2 z-10 origin-[0] bg-gray-100 dark:bg-gray-800 px-2 peer-focus:px-2 peer-focus:text-blue-600 peer-focus:dark:text-blue-500 peer-placeholder-shown:scale-100 peer-placeholder-shown:-translate-y-1/2 peer-placeholder-shown:top-1/2 peer-focus:top-2 peer-focus:scale-75 peer-focus:-translate-y-4 rtl:peer-focus:translate-x-1/4 rtl:peer-focus:left-auto start-1">Email
          address*</label>
      </div>

      <div class="mb-3 w-full text-end">
        <p class="text-xs text-red-500" id="email-alert"></p>
      </div>

      <div class="relative mb-1">
        <input id="password" name="password" type="password" id="floating_outlined"
          class="block px-2.5 pb-2.5 pt-4 w-full text-sm text-gray-900 bg-transparent rounded-lg border-1 border-gray-300 appearance-none dark:text-white dark:border-gray-600 dark:focus:border-blue-500 focus:outline-none focus:ring-0 focus:border-blue-600 peer"
          placeholder=" " required />
        <label for="floating_outlined"
          class="absolute text-xs text-gray-500 dark:text-gray-400 duration-300 transform -translate-y-4 scale-75 top-2 z-10 origin-[0] bg-gray-100 dark:bg-gray-800 px-2 peer-focus:px-2 peer-focus:text-blue-600 peer-focus:dark:text-blue-500 peer-placeholder-shown:scale-100 peer-placeholder-shown:-translate-y-1/2 peer-placeholder-shown:top-1/2 peer-focus:top-2 peer-focus:scale-75 peer-focus:-translate-y-4 rtl:peer-focus:translate-x-1/4 rtl:peer-focus:left-auto start-1">Password*</label>
      </div>

      <div class="mb-3 w-full">
        <p class="text-[10px] text-gray-500 dark:text-white text-ellipsis overflow-hidden">Must be at least 8 to 50
          characters long.</p>
      </div>

      <div class="relative mb-1">
        <input id="repeat-password" name="repeat-password" type="password" id="floating_outlined"
          class="block px-2.5 pb-2.5 pt-4 w-full text-sm text-gray-900 bg-transparent rounded-lg border-1 border-gray-300 appearance-none dark:text-white dark:border-gray-600 dark:focus:border-blue-500 focus:outline-none focus:ring-0 focus:border-blue-600 peer"
          placeholder=" " required />
        <label for="floating_outlined"
          class="absolute text-xs text-gray-500 dark:text-gray-400 duration-300 transform -translate-y-4 scale-75 top-2 z-10 origin-[0] bg-gray-100 dark:bg-gray-800 px-2 peer-focus:px-2 peer-focus:text-blue-600 peer-focus:dark:text-blue-500 peer-placeholder-shown:scale-100 peer-placeholder-shown:-translate-y-1/2 peer-placeholder-shown:top-1/2 peer-focus:top-2 peer-focus:scale-75 peer-focus:-translate-y-4 rtl:peer-focus:translate-x-1/4 rtl:peer-focus:left-auto start-1">Repeat
          password*</label>
      </div>

      <div class="mb-3 w-full text-end">
        <p class="text-xs text-red-500" id="repeat-password-alert"></p>
      </div>

      <div class="flex justify-center">
        <button type="submit"
          class="text-white bg-blue-700 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm w-full sm:w-auto px-5 py-2.5 text-center dark:bg-blue-600 dark:focus:ring-blue-800 mb-4 opacity-75"
          disabled>Sign
          up</button>
      </div>

      <div class="flex justify-center text-center mb-4">
        <div class="text-xs font-medium text-gray-500 dark:text-white">Already have an account? <a href="/login"
            class="underline text-gray-800 dark:text-white">Log in</a></div>
      </div>

      <% if (typeof error !=='undefined' && error) { %>
        <div class="mb-3 w-full text-center">
          <p class="text-xs text-red-500">
            <%= error %>
          </p>
        </div>
        <% } %>

    </form>
  </div>

  <script>
    document.addEventListener('DOMContentLoaded', function () {
      const repeatPasswordInput = document.getElementById('repeat-password');
      const repeatPasswordAlert = document.getElementById('repeat-password-alert');
      const passwordInput = document.getElementById('password');
      const emailAlert = document.getElementById('email-alert');
      const emailInput = document.getElementById('email');
      const submitButton = document.querySelector('button[type="submit"]');

      // Function to check if the email is valid
      const checkEmailValidity = () => {
        // Regular expression to check if the email is valid
        const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/

        if (!emailRegex.test(emailInput.value)) {
          emailAlert.textContent = 'Email is invalid';
          // Disable the submit button since the email is invalid
          submitButton.disabled = true;
        } else {
          emailAlert.textContent = '';
          // Enable the submit button
          submitButton.disabled = false;
        }
      };

      // Alerts user if passwords do not match
      const checkPasswordMatch = () => {
        if (repeatPasswordInput.value !== passwordInput.value) {
          repeatPasswordAlert.textContent = 'Passwords do not match';
          submitButton.classList.add('opacity-75'); // Reduce the opacity of the submit button
          submitButton.disabled = true; // Disable the submit button
        } else {
          repeatPasswordAlert.textContent = ''; // Clear the alert message if passwords match
          submitButton.classList.remove('opacity-75'); // Revert the opacity of the submit button
          submitButton.disabled = false; // Enable the submit button
        }
      };

      repeatPasswordInput.addEventListener('input', checkPasswordMatch);
      emailInput.addEventListener('input', checkEmailValidity);
    });
  </script>



  <%- include('partials/footer.ejs') %>